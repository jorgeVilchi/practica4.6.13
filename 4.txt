from math import sqrt
import numpy as np
import matplotlib.pyplot as plt
from sympy import Symbol
from scipy.misc import derivative 


x=Symbol('x')
y=x**4/12-x**3/2+x**2+10
d=y.diff(x)
sd=d.diff(x)
print("Funcion Original: ",y)
print("Primera Derivada: ",d)
print("Segunda Derivada: ",sd)

def discriminante(a, b, c):
    return b**2 - 4 * a * c

def soluciones_ecuacion_cuadratica(a, b, c):
    d = discriminante(a, b, c)

    if d > 0:
        x_1 = (-b + sqrt(d)) / (2*a)
        x_2 = (-b - sqrt(d)) / (2*a)

        return x_1, x_2
    elif d == 0:
        x = -b / (2*a)

        return x,
    else:
        return tuple([])

resultado = soluciones_ecuacion_cuadratica(1, 3, 2)
mas=abs(resultado[0])+.1;
menos=abs(resultado[0])-.1;

s = "x**2 - 3*x + 2"
libres = {"x": mas}
f1=eval(s, {}, libres)
print(f1)
libres = {"x": menos}
f2=eval(s, {}, libres)
print(f2)


mas2=abs(resultado[1])+.1;
menos2=abs(resultado[1])-.1;
libres2 = {"x": mas2}
f3=eval(s, {}, libres)
print(f3)
libres2 = {"x": menos2}
f4=eval(s, {}, libres2)
print(f4)

def f(x):
    return x**4/12-x**3/2+x**2+10
 
N=1500;
a=-500
b=500
x=np.linspace(a,b,N)

y=f(x)
plt.plot(x,y,'g-')
plt.show